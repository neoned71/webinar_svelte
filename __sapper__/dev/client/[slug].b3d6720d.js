import { S as SvelteComponentDev, i as init, s as safe_not_equal, d as dispatch_dev, o as globals, v as validate_slots, H as get_store_value, I as onMount, T as Token, J as ApiUrl, N as create_component, O as claim_component, P as mount_component, Q as transition_in, R as transition_out, U as destroy_component, a as space, e as element, q as query_selector_all, b as detach_dev, c as claim_space, f as claim_element, g as children, C as set_style, k as add_location, j as attr_dev, l as insert_hydration_dev, W as check_outros, V as group_outros } from './client.1988ac71.js';
import { F as Face_screen, l as lookup } from './_face_screen.3f841e13.js';

/* src/routes/room/[slug].svelte generated by Svelte v3.44.0 */

const { console: console_1 } = globals;
const file = "src/routes/room/[slug].svelte";

// (189:2) {#if initializedSocket}
function create_if_block(ctx) {
	let facescreen;
	let current;

	facescreen = new Face_screen({
			props: {
				socket: /*socket*/ ctx[1],
				user: /*user*/ ctx[2],
				room: /*room*/ ctx[3],
				roomId: /*roomId*/ ctx[0]
			},
			$$inline: true
		});

	const block = {
		c: function create() {
			create_component(facescreen.$$.fragment);
		},
		l: function claim(nodes) {
			claim_component(facescreen.$$.fragment, nodes);
		},
		m: function mount(target, anchor) {
			mount_component(facescreen, target, anchor);
			current = true;
		},
		p: function update(ctx, dirty) {
			const facescreen_changes = {};
			if (dirty & /*socket*/ 2) facescreen_changes.socket = /*socket*/ ctx[1];
			if (dirty & /*user*/ 4) facescreen_changes.user = /*user*/ ctx[2];
			if (dirty & /*room*/ 8) facescreen_changes.room = /*room*/ ctx[3];
			if (dirty & /*roomId*/ 1) facescreen_changes.roomId = /*roomId*/ ctx[0];
			facescreen.$set(facescreen_changes);
		},
		i: function intro(local) {
			if (current) return;
			transition_in(facescreen.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(facescreen.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			destroy_component(facescreen, detaching);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block.name,
		type: "if",
		source: "(189:2) {#if initializedSocket}",
		ctx
	});

	return block;
}

function create_fragment(ctx) {
	let t0;
	let div0;
	let t1;
	let div1;
	let t2;
	let hr;
	let current;
	let if_block = /*initializedSocket*/ ctx[4] && create_if_block(ctx);

	const block = {
		c: function create() {
			t0 = space();
			div0 = element("div");
			if (if_block) if_block.c();
			t1 = space();
			div1 = element("div");
			t2 = space();
			hr = element("hr");
			this.h();
		},
		l: function claim(nodes) {
			const head_nodes = query_selector_all('[data-svelte=\"svelte-oh6yg0\"]', document.head);
			head_nodes.forEach(detach_dev);
			t0 = claim_space(nodes);
			div0 = claim_element(nodes, "DIV", { style: true });
			var div0_nodes = children(div0);
			if (if_block) if_block.l(div0_nodes);
			div0_nodes.forEach(detach_dev);
			t1 = claim_space(nodes);
			div1 = claim_element(nodes, "DIV", { id: true });
			children(div1).forEach(detach_dev);
			t2 = claim_space(nodes);
			hr = claim_element(nodes, "HR", {});
			this.h();
		},
		h: function hydrate() {
			document.title = "Sapper project template";
			set_style(div0, "display", "flex");
			set_style(div0, "width", "100%");
			add_location(div0, file, 185, 1, 3643);
			attr_dev(div1, "id", "video-grid");
			add_location(div1, file, 198, 1, 4159);
			add_location(hr, file, 199, 0, 4187);
		},
		m: function mount(target, anchor) {
			insert_hydration_dev(target, t0, anchor);
			insert_hydration_dev(target, div0, anchor);
			if (if_block) if_block.m(div0, null);
			insert_hydration_dev(target, t1, anchor);
			insert_hydration_dev(target, div1, anchor);
			insert_hydration_dev(target, t2, anchor);
			insert_hydration_dev(target, hr, anchor);
			current = true;
		},
		p: function update(ctx, [dirty]) {
			if (/*initializedSocket*/ ctx[4]) {
				if (if_block) {
					if_block.p(ctx, dirty);

					if (dirty & /*initializedSocket*/ 16) {
						transition_in(if_block, 1);
					}
				} else {
					if_block = create_if_block(ctx);
					if_block.c();
					transition_in(if_block, 1);
					if_block.m(div0, null);
				}
			} else if (if_block) {
				group_outros();

				transition_out(if_block, 1, 1, () => {
					if_block = null;
				});

				check_outros();
			}
		},
		i: function intro(local) {
			if (current) return;
			transition_in(if_block);
			current = true;
		},
		o: function outro(local) {
			transition_out(if_block);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t0);
			if (detaching) detach_dev(div0);
			if (if_block) if_block.d();
			if (detaching) detach_dev(t1);
			if (detaching) detach_dev(div1);
			if (detaching) detach_dev(t2);
			if (detaching) detach_dev(hr);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

console.log("hello");

// export var user;
var roomId;

async function preload(p, session) {
	let params = p.params;
	roomId = params.slug;
	console.log("slug:" + roomId);
	return { roomId };
}

function instance($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots('U5Bslugu5D', slots, []);
	var loginPath = get_store_value(ApiUrl);
	var socket = null;
	var user = null;
	var myPeer;
	const peers = {};
	let { roomId } = $$props;
	var room;
	console.log(roomId);
	var isMaster = false;
	var initializedSocket = false;

	onMount(async () => {
		console.log("mounted");

		// localStorage.setItem("token","some value");
		var token = localStorage.getItem("token");

		if (!token) {
			console.log("yes");
		} // location.href="/login";

		Token.set(token);

		// console.log(loginPath+'/auth/whoami');
		var res = await fetch(loginPath + '/auth/whoami', {
			mode: 'cors',
			method: 'get',
			headers: { 'Authorization': 'Bearer ' + token }
		});

		if (res.status == 200) {
			try {
				let data = await res.text();
				data = await JSON.parse(data);
				$$invalidate(2, user = data.user);

				if (user) {
					// console.log(loginPath+'/auth/whoami');
					res = await fetch(loginPath + '/rooms/status/' + roomId, {
						mode: 'cors',
						method: 'get',
						headers: { 'Authorization': 'Bearer ' + token }
					});

					if (res.status == 200) {
						try {
							data = await res.text();

							// alert(data);
							data = await JSON.parse(data);

							if (data.status == "success") {
								$$invalidate(3, room = data.data);
								connectSocket();
							} else {
								alert("Sorry no room found");
							}
						} catch(e) {
							console.log("caught");
							console.log(e);
						}
					}
				}
			} catch(e) {
				console.log("caught");

				//this.redirect(300,"/login");
				// this.error(e,data.message);
				console.log(e);
			}
		} else {
			console.log(await res.text());
		} // user.email="no logged";
		// return {user};
	}); // this.redirect(300,"/login");
	//

	async function connectSocket() {
		var token = localStorage.getItem("token");
		var queryString = "room_id=" + roomId + "&token=" + token;
		console.log("query: " + queryString);
		console.log("checkpoint 0");

		// socket = io("wss://127.0.0.1:12002", {path:"/socket.io",query:queryString,extraHeaders: {"Authorization": "Bearer "+token},transports: ['websocket'],upgrade:true});
		$$invalidate(1, socket = lookup("wss://webinar.neoned71.com:12002", {
			path: "/socket.io",
			query: queryString,
			extraHeaders: { "Authorization": "Bearer " + token },
			transports: ['websocket'],
			upgrade: true
		}));

		socket.on("connect", () => {
			console.log("connected");

			//initializeSocket(socket);
			initializeScreens();
		});
	}

	function initializeScreens() {
		console.log(user);
		console.log(room);
		console.log(socket);
		$$invalidate(4, initializedSocket = true);
	}

	const writable_props = ['roomId'];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console_1.warn(`<U5Bslugu5D> was created with unknown prop '${key}'`);
	});

	$$self.$$set = $$props => {
		if ('roomId' in $$props) $$invalidate(0, roomId = $$props.roomId);
	};

	$$self.$capture_state = () => ({
		roomId,
		preload,
		FaceScreen: Face_screen,
		onMount,
		Token,
		ApiUrl,
		get: get_store_value,
		io: lookup,
		loginPath,
		socket,
		user,
		myPeer,
		peers,
		roomId,
		room,
		isMaster,
		initializedSocket,
		connectSocket,
		initializeScreens
	});

	$$self.$inject_state = $$props => {
		if ('loginPath' in $$props) loginPath = $$props.loginPath;
		if ('socket' in $$props) $$invalidate(1, socket = $$props.socket);
		if ('user' in $$props) $$invalidate(2, user = $$props.user);
		if ('myPeer' in $$props) myPeer = $$props.myPeer;
		if ('roomId' in $$props) $$invalidate(0, roomId = $$props.roomId);
		if ('room' in $$props) $$invalidate(3, room = $$props.room);
		if ('isMaster' in $$props) isMaster = $$props.isMaster;
		if ('initializedSocket' in $$props) $$invalidate(4, initializedSocket = $$props.initializedSocket);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [roomId, socket, user, room, initializedSocket];
}

class U5Bslugu5D extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, { roomId: 0 });

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "U5Bslugu5D",
			options,
			id: create_fragment.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*roomId*/ ctx[0] === undefined && !('roomId' in props)) {
			console_1.warn("<U5Bslugu5D> was created without expected prop 'roomId'");
		}
	}

	get roomId() {
		throw new Error("<U5Bslugu5D>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set roomId(value) {
		throw new Error("<U5Bslugu5D>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

export { U5Bslugu5D as default, preload };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
